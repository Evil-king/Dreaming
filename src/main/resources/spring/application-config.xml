<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- Uncomment and add your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.service"/>  -->
	
	<bean id="propertyConfigurer" 
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:jdbc.properties"/>
	</bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描mapping.xml文件 -->
		<!-- <property name="mapperLocations" value="classpath:mapper/*.xml" /> -->
		<!-- <property name="configuration">
			<bean class="org.apache.ibatis.session.Configuration">
				开启自动映射：从典型的数据库字段名 A_COLUMN 到典型的驼峰标识Java属性名 aColumn
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <property name="logImpl" value="LOG4J"/>
			</bean>
		</property> -->
	</bean>
	
	<!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean> -->
    
    <!-- 扫描指定包路径下的映射器并自动将它们创建成 MapperFactoryBean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dreaming.dao"/>
        <!-- 可选项，当定义多个 Session BeanFactory 时需要指定
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
    </bean>

</beans>
